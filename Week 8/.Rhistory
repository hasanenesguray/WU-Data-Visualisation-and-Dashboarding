coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
demographics <- get_eurostat("demo_gind")
head(demographics)
library(tidyverse)
demo2 <-
demographics %>%
filter(time == as.Date("2020-01-01")) %>%
pivot_wider(names_from = indic_de, values_from = values)
head(demo2)
demomap <- left_join(eurostat.map, demo2, by = "geo")
head(as.data.frame(demomap))
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
install.packages("cartogram")
plot(demomap)
plot(demomap[id])
plot(demomap[,id])
library(cartogram)
cartogram_cont(demomap, weight = "JAN")
cartogram_cont(st_transform(demomap, st_crs(4326)), weight = "JAN")
cartogram_cont(st_transform(demomap, crs = st_crs(4326)), weight = "JAN")
st_crs(demomap)
cartogram_cont(st_transform(demomap, crs = st_crs(23038)), weight = "JAN")
europeCartogram <- cartogram_cont(
st_transform(demomap, crs = st_crs(23038)),
weight = "JAN", # weithing field
itermax = 3 #limit to 3 iterations, so it's a bit faster
)
plot(europeCartogram)
ggplot(europeCartogram) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(europeCartogram) + aes(fill = JAN) + geom_sf() +
theme_bw() +
#coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(europeCartogram) + aes(fill = JAN) + geom_sf() +
theme_bw() +
#coord_sf(crs = st_crs(23038), xlim=c(-24,42), ylim=c(34, 71)) +
coord_sf(crs = st_crs(23038)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(europeCartogram) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = st_crs(23038), xlim=c(-24,42), ylim=c(34, 71)) +
#coord_sf(crs = st_crs(23038)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(europeCartogram) + aes(fill = JAN) + geom_sf() +
theme_bw() +
#coord_sf(crs = st_crs(23038), xlim=c(-24,42), ylim=c(34, 71)) +
coord_sf(crs = st_crs(23038)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(europeCartogram) + aes(fill = JAN) + geom_sf() +
theme_bw() +
#coord_sf(crs = st_crs(23038), xlim=c(-24,42), ylim=c(34, 71)) +
coord_sf(crs = st_crs(23038), xlim=c(-24,42)) +
#coord_sf(crs = st_crs(23038)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(europeCartogram) + aes(fill = JAN) + geom_sf() +
theme_bw() +
#coord_sf(crs = st_crs(23038), xlim=c(-24,42), ylim=c(34, 71)) +
coord_sf(crs = st_crs(23038), xlim=c(-24,42), ylim=c(0, 90)) +
#coord_sf(crs = st_crs(23038)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(europeCartogram) + aes(fill = JAN) + geom_sf() +
theme_bw() +
#coord_sf(crs = st_crs(23038), xlim=c(-24,42), ylim=c(34, 71)) +
coord_sf(crs = st_crs(23038), xlim=c(-24,42), ylim=c(0, 900)) +
#coord_sf(crs = st_crs(23038)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = st_crs(23038), xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(europeCartogram) + aes(fill = JAN) + geom_sf() +
theme_bw() +
#coord_sf(crs = st_crs(23038), xlim=c(-24,42), ylim=c(34, 71)) +
coord_sf(crs = st_crs(23038), xlim=c(-6071034.37,391037.37), ylim=c(6889656.98, 7880279.10)) +
#coord_sf(crs = st_crs(23038)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = st_crs(9040), xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = st_crs(9040)) +#, xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = st_crs(9039)) +#, xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=merc") +#, xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=merc", xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
?ptransform
??ptransform
ggplot(world) + geom_sf() + theme_bw() +
coord_sf(ylim = c(34, 71), xlim = c(-24, 41))
ggplot(eurostat.map) + geom_sf() +
geom_sf_label(aes(label = id), size = 2) +
theme_bw() +
coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(eurostat.map) + geom_sf() +
geom_sf_label(aes(label = id), size = 2) +
theme_bw() +
#  coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(eurostat.map) + geom_sf() +
geom_sf_label(aes(label = id), size = 2) +
theme_bw() +
coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=wgs84", xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
europeCartogram <- cartogram_cont(
st_transform(demomap, crs = "+proj=equirectangular"),
weight = "JAN", # weithing field
itermax = 3 #limit to 3 iterations, so it's a bit faster
)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=eqc", xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +units=m", xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +units=m"#, xlim=c(-24,42), ylim=c(34, 71)
) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=lcca"#, xlim=c(-24,42), ylim=c(34, 71)
) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=lcc"#, xlim=c(-24,42), ylim=c(34, 71)
) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=merc"#, xlim=c(-24,42), ylim=c(34, 71)
) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=lcc +lat_1=43 +lat_2=62 +lat_0=30 +lon_0=10 +x_0=0 +y_0=0 +ellps=intl +units=m no_defs"#, xlim=c(-24,42), ylim=c(34, 71)
) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=lcc +lat_1=43 +lat_2=62 +lat_0=30 +lon_0=10 +x_0=0 +y_0=0 +ellps=intl +units=m no_defs", xlim=c(-24,42), ylim=c(34, 71)
) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
#
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=lcc +lat_1=43 +lat_2=62 +lat_0=30 +lon_0=10 +x_0=0 +y_0=0 +ellps=intl +units=m no_defs"#, xlim=c(-24,42), ylim=c(34, 71)
) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
eurostat.map <- get_eurostat_geospatial(nuts = 0)
ggplot(eurostat.map) + geom_sf() +
geom_sf_label(aes(label = id), size = 2) +
theme_bw() +
#coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(st_crop(eurostat.map, xmin = -24, xmax = 42,
ymin = 34, ymax = 71)
) +
geom_sf() +
geom_sf_label(aes(label = id), size = 2) +
theme_bw() +
#coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
eurostat.map <- st_crop(eurostat.map, xmin = -24, xmax = 42,                                    ymin = 34, ymax = 71)
ggplot(eurostat.map) +geom_sf() +
geom_sf_label(aes(label = id), size = 2) +
theme_bw() +
#coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
demographics <- get_eurostat("demo_gind")
head(demographics)
library(tidyverse)
demo2 <-
demographics %>%
filter(time == as.Date("2020-01-01")) %>%
pivot_wider(names_from = indic_de, values_from = values)
head(demo2)
demomap <- left_join(eurostat.map, demo2, by = "geo")
head(as.data.frame(demomap))
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
#coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=lcc +lat_1=43 +lat_2=62 +lat_0=30 +lon_0=10 +x_0=0 +y_0=0 +ellps=intl +units=m no_defs"#, xlim=c(-24,42), ylim=c(34, 71)
) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
eurostat.map <- st_crop(eurostat.map, xmin = -24, xmax = 42,                                    ymin = 30, ymax = 71)
eurostat.map <- get_eurostat_geospatial(nuts = 0)
eurostat.map <- get_eurostat_geospatial(nuts = 0)
eurostat.map <- get_eurostat_geospatial(nuts = 0)
ggplot(eurostat.map) + geom_sf() +
geom_sf_label(aes(label = id), size = 2) +
theme_bw() +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
eurostat.map <- st_crop(eurostat.map, xmin = -24, xmax = 42,                                    ymin = 30, ymax = 71)
ggplot(eurostat.map) +geom_sf() +
geom_sf_label(aes(label = id), size = 2) +
theme_bw() +
#coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
demographics <- get_eurostat("demo_gind")
head(demographics)
library(tidyverse)
demo2 <-
demographics %>%
filter(time == as.Date("2020-01-01")) %>%
pivot_wider(names_from = indic_de, values_from = values)
head(demo2)
demomap <- left_join(eurostat.map, demo2, by = "geo")
head(as.data.frame(demomap))
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=lcc +lat_1=43 +lat_2=62 +lat_0=30 +lon_0=10 +x_0=0 +y_0=0 +ellps=intl +units=m no_defs"#, xlim=c(-24,42), ylim=c(34, 71)
) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(
crs = st_crs(3034)
#crs = "+proj=lcc +lat_1=43 +lat_2=62 +lat_0=30 +lon_0=10 +x_0=0 +y_0=0 +ellps=intl +units=m no_defs"#, xlim=c(-24,42), ylim=c(34, 71)
) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = st_crs(3034)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
europeCartogram <- cartogram_cont(
st_transform(demomap, crs = st_crs(3034)),
weight = "JAN", # weithing field
itermax = 3 #limit to 3 iterations, so it's a bit faster
)
ggplot(europeCartogram) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = st_crs(3034)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
# United Kingdom
utla.map <- st_read(
"UTLA2019/Counties_and_Unitary_Authorities_(December_2019)_Boundaries_UK_BUC.shp")
utla.map <- st_read(
"UTLA2019/Counties_and_Unitary_Authorities_(December_2019)_Boundaries_UK_BUC.shp")
ggplot(utla.map) + geom_sf() + theme_bw()
ldn.map <- utla.map[substr(utla.map$ctyua19cd, 1, 3) == "E09",]
ggplot(ldn.map) + geom_sf() +
theme_bw()
ldn.map$geometry
st_crs(ldn.map)
st_crs(ldn.map)
ggplot(ldn.map) + geom_sf() +
theme_bw() +
coord_sf(crs = st_crs(4326))
ggplot(ldn.map) + geom_sf() +
theme_bw() +
coord_sf(crs = "+proj=merc")
library(jsonlite)
stop_search <- fromJSON("https://data.police.uk/api/stops-force?force=metropolitan&date")
#stop_search <- fromJSON("https://data.police.uk/api/stops-force?force=metropolitan&date")
stop_search <- fromJSON("stops-force.json")
ggplot(ldn.map) + geom_sf() +
geom_point(data = stop_search,
aes(location.longitude, location.latitude)) +
theme_bw() +
coord_sf(crs = st_crs(4326))
library(jsonlite)
#stop_search <- fromJSON("https://data.police.uk/api/stops-force?force=metropolitan&date")
stop_search <- fromJSON("stops-force.json")
stop_search <- flatten(stop_search)
stop_search$location.latitude <-
as.numeric(stop_search$location.latitude)
stop_search$location.longitude <-
as.numeric(stop_search$location.longitude)
stop_search <- stop_search[!is.na(stop_search$location.latitude),]
ggplot(ldn.map) + geom_sf() +
geom_point(data = stop_search,
aes(location.longitude, location.latitude)) +
theme_bw() +
coord_sf(crs = st_crs(4326))
ggplot(ldn.map) + geom_sf() +
geom_density2d_filled(data = stop_search, alpha = 0.7,
breaks = seq(5, 35, 5),
aes(location.longitude, location.latitude)) +
theme_bw() +
coord_sf(crs = st_crs(4326), xlim = c(-0.5, 0.32), ylim = c(51.28, 51.72)) +
labs(x= "", y ="")
stop_search_sample <- stop_search[sample(nrow(stop_search), 500),]
stop_search_sample <-
stop_search_sample[!is.na(stop_search_sample$object_of_search),]
ggplot(ldn.map) + geom_sf() +
geom_density2d_filled(data = stop_search, alpha = 0.7,
breaks = seq(5, 35, 5),
aes(location.longitude, location.latitude)) +
geom_point(data = stop_search_sample, alpha = 0.5,
aes(location.longitude, location.latitude,
colour = object_of_search)) +
theme_bw() +
scale_color_brewer(palette = "Set1") +
coord_sf(crs = st_crs(4326), xlim = c(-0.5, 0.32), ylim = c(51.28, 51.72)) +
guides(fill = "none",
colour = guide_legend(
title = "Reasons",
override.aes = list(
alpha = 1,
size = 2,
fill = NA,
linetype = 0
))) +
labs(x= "", y ="")
if (knitr::is_latex_output()) {
knitr::opts_chunk$set(dev='cairo_pdf')
if (!("webshot" %in% installed.packages()[,"Package"])) {
install.packages("webshot")
webshot::install_phantomjs()
}
}
library(ggplot2)
library(sf)
library(rnaturalearth)
world <- ne_countries(returnclass = "sf", scale="medium")
ggplot(world) + geom_sf()
ggplot(world) + geom_sf() +
theme_bw() + coord_sf(ylim = c(-80, 90), expand = F)
ggplot(world) + geom_sf() + aes(fill = pop_est) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt", label = scales::comma) +
labs(fill = "Population") +
theme_bw() + coord_sf(ylim = c(-80, 90), expand = F)
ggplot(world) + geom_sf() + aes(fill = pop_est) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt", label = scales::comma) +
labs(fill = "Population") +
theme_bw() +
coord_sf(crs = st_crs(3035))
ggplot(world) + geom_sf() + aes(fill = pop_est) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt", label = scales::comma) +
labs(fill = "Population") +
theme_bw() +
coord_sf(crs="+proj=cea +lon_0=0 +lat_ts=45")
coord_sf(crs="+proj=moll")
ggplot(world) + geom_sf() + aes(fill = pop_est) +
scale_fill_viridis_c(option = "plasma", trans = "sqrt", label = scales::comma) +
labs(fill = "Population") +
theme_bw() +
coord_sf(crs="+proj=cea +lon_0=0 +lat_ts=45")
ggplot(world) + geom_sf() + theme_bw() +
coord_sf(ylim = c(34, 71), xlim = c(-24, 41))
library(eurostat)
eurostat.map <- get_eurostat_geospatial(nuts = 0)
ggplot(eurostat.map) + geom_sf() +
geom_sf_label(aes(label = id), size = 2) +
theme_bw() +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
eurostat.map <- st_crop(eurostat.map, xmin = -24, xmax = 42,                                    ymin = 30, ymax = 71)
ggplot(eurostat.map) +geom_sf() +
geom_sf_label(aes(label = id), size = 2) +
theme_bw() +
#coord_sf(xlim=c(-24,42), ylim=c(34, 71)) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
demographics <- get_eurostat("demo_gind")
head(demographics)
library(tidyverse)
demo2 <-
demographics %>%
filter(time == as.Date("2020-01-01")) %>%
pivot_wider(names_from = indic_de, values_from = values)
head(demo2)
demomap <- left_join(eurostat.map, demo2, by = "geo")
head(as.data.frame(demomap))
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
ggplot(demomap) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = st_crs(3034)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
library(cartogram)
europeCartogram <- cartogram_cont(
st_transform(demomap, crs = st_crs(3034)),
weight = "JAN", # weithing field
itermax = 3 #limit to 3 iterations, so it's a bit faster
)
library(cartogram)
europeCartogram <- cartogram_cont(
st_transform(demomap, crs = st_crs(3034)),
weight = "JAN", # weigthing field
)
ggplot(europeCartogram) + aes(fill = JAN) + geom_sf() +
theme_bw() +
coord_sf(crs = st_crs(3034)) +
scale_fill_viridis_c(option = "plasma", label = scales::comma) +
labs(caption = "© EuroGeographics for the administrative boundaries",
x = NULL, y = NULL)
